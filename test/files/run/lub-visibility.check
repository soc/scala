Type in expressions to have them evaluated.
Type :help for more information.

scala> 

scala> // should infer List[scala.collection.immutable.Seq[Nothing]]

scala> // but reverted that for SI-5534.

scala> val x = List(List(), Vector())
x: List[scala.collection.immutable.Seq[Nothing] with scala.collection.AbstractSeq[Nothing]] = List(List(), Vector())

scala>

scala> :type Map(1 -> (1 to 10), 2 -> (1 to 10).toList)
scala.collection.immutable.Map[Int,scala.collection.immutable.Seq[Int] with scala.collection.AbstractSeq[Int]]

scala>

scala> abstract class Foo { def x: Any } ; class Bar extends Foo { def x = Iterator(Nil) } ; class Baz extends Foo { def x = Iterable(Vector()) }
defined class Foo
defined class Bar
defined class Baz

scala> def f = if (true) new Bar else new Baz
f: Foo

scala> 

scala> 
